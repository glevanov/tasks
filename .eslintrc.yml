parser: "@typescript-eslint/parser"
plugins:
  - "@typescript-eslint"
extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
  - plugin:compat/recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:import/typescript
  - plugin:import/recommended
  - plugin:react/recommended
rules:
  # style
  semi: off
  '@typescript-eslint/semi': [error, always]
  quotes: off
  '@typescript-eslint/quotes': [error, single]
  comma-dangle: off
  '@typescript-eslint/comma-dangle': [error, always-multiline]
  arrow-parens: [error, always]
  indent: off
  '@typescript-eslint/indent': [error, tab]
  brace-style: 'off'
  "@typescript-eslint/brace-style": [error, 1tbs]
  curly: [error, multi-line]
  object-curly-spacing: off
  '@typescript-eslint/object-curly-spacing': [error, always]
  block-spacing: error
  space-before-blocks: off
  '@typescript-eslint/space-before-blocks': error
  no-multi-spaces: error
  no-multiple-empty-lines:
    - error
    - max: 1

  # imports
  import/no-unresolved: error
  import/order:
    - error
    - newlines-between: always
  import/no-default-export: warn

  # typescript
  '@typescript-eslint/explicit-member-accessibility': off
  '@typescript-eslint/explicit-function-return-type': off
  '@typescript-eslint/ban-ts-ignore': off
  '@typescript-eslint/prefer-ts-expect-error': error
  '@typescript-eslint/ban-ts-comment': warn
  '@typescript-eslint/explicit-module-boundary-types': off
  '@typescript-eslint/member-delimiter-style':
    - error
    - multiline:
        delimiter: none
  '@typescript-eslint/no-empty-function': off
  '@typescript-eslint/no-unused-vars': warn

  # react
  react/prop-types: 'off'
  react/react-in-jsx-scope: 'off'
  react/display-name: 'off'
  react/no-string-refs: 'off'
  react/no-unknown-property: 'off'
  react/jsx-wrap-multilines:
    - error
    - declaration: parens-new-line
      assignment: parens-new-line
      return: parens-new-line
      arrow: parens-new-line
      condition: parens-new-line
      logical: parens-new-line
      prop: parens-new-line
  react/jsx-max-props-per-line:
    - error
    - maximum: 2
  react/jsx-first-prop-new-line: [error, multiline]
  react/jsx-closing-tag-location: error
  react/jsx-closing-bracket-location: error
  react/jsx-one-expression-per-line: 'off'
  react/jsx-max-depth:
    - warn
    - max: 5
  react/jsx-curly-spacing: [warn, never]
  react/jsx-equals-spacing: [error, never]
  react/jsx-curly-brace-presence:
    - error
    - props: always
      children: ignore

settings:
  react:
    version: detect
  import/ignore:
    - node_modules
